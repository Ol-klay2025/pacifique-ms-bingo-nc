/**
 * Script de d√©ploiement pour l'acc√®s direct √† l'interface organisateur
 * Ce script est con√ßu pour √™tre le point d'entr√©e principal lors du d√©ploiement
 */

const fs = require('fs');
const path = require('path');

console.log('üöÄ Pr√©paration du d√©ploiement d\'acc√®s direct organisateur MS BINGO...');

// Sauvegarder l'index.js original si ce n'est pas d√©j√† fait
const indexPath = path.join(__dirname, 'index.js');
const backupPath = path.join(__dirname, 'index.js.regular-backup');

if (!fs.existsSync(backupPath)) {
  try {
    fs.copyFileSync(indexPath, backupPath);
    console.log('‚úÖ Sauvegarde de index.js cr√©√©e: index.js.regular-backup');
  } catch (error) {
    console.error('‚ùå Erreur lors de la sauvegarde de index.js:', error);
  }
}

// Contenu du nouveau fichier index.js pour l'acc√®s organisateur
const newIndexContent = `/**
 * MS BINGO PACIFIQUE - Point d'entr√©e avec acc√®s direct organisateur
 * Version: 14 avril 2025
 * 
 * Ce fichier a √©t√© modifi√© pour fournir un acc√®s direct √† l'interface organisateur
 * sans authentification requise.
 */

// Charger le script d'acc√®s direct organisateur
require("./organizer-direct-access.js");
`;

// √âcrire le nouveau contenu dans index.js
try {
  fs.writeFileSync(indexPath, newIndexContent);
  console.log('‚úÖ Fichier index.js mis √† jour pour l\'acc√®s direct organisateur');
} catch (error) {
  console.error('‚ùå Erreur lors de la mise √† jour de index.js:', error);
}

console.log('üìù Configuration termin√©e! Apr√®s d√©ploiement, les utilisateurs auront:');
console.log('1. Un acc√®s direct √† l\'interface organisateur sans authentification');
console.log('2. Une session organisateur pr√©-configur√©e');
console.log('3. Aucun probl√®me de redirection apr√®s connexion');

// Ex√©cuter le script d'acc√®s direct organisateur
require('./organizer-direct-access.js');